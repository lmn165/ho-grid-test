{"ast":null,"code":"var _jsxFileName = \"D:\\\\2021\\\\\\uD14C\\uC2A4\\uD2B8\\uC6A9\\\\test\\\\src\\\\features\\\\test\\\\SBGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n/*\r\n  id : 그리드 ID\r\n  parentid : 그리드가 표출될 div의 ID\r\n  jsonref : 그리드에 바인딩 될 데이터\r\n  columns : 그리드 컬럼 타입 및 속성 설정\r\n  style : 그리드DIV에 적용 될 스타일\r\n  options : 그리드 속성 \r\n  setDatagrid : 그리드 변경 여부를 알기 state 관리 \r\n\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SBGrid = ({\n  id,\n  parentid,\n  jsonref,\n  columns,\n  style,\n  options,\n  setDatagrid\n}) => {\n  _s();\n\n  useEffect(() => {\n    const SBGridProperties = {\n      id,\n      parentid,\n      jsonref,\n      columns,\n      options: { ...options\n      }\n    };\n    setDatagrid(window._SBGrid.create(SBGridProperties));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: parentid,\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SBGrid, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SBGrid;\nexport default SBGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"SBGrid\");","map":{"version":3,"sources":["D:/2021/테스트용/test/src/features/test/SBGrid.js"],"names":["React","useState","useEffect","SBGrid","id","parentid","jsonref","columns","style","options","setDatagrid","SBGridProperties","window","_SBGrid","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,EADc;AAEdC,EAAAA,QAFc;AAGdC,EAAAA,OAHc;AAIdC,EAAAA,OAJc;AAKdC,EAAAA,KALc;AAMdC,EAAAA,OANc;AAOdC,EAAAA;AAPc,CAAD,KAQT;AAAA;;AACJR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,gBAAgB,GAAG;AACvBP,MAAAA,EADuB;AAEvBC,MAAAA,QAFuB;AAGvBC,MAAAA,OAHuB;AAIvBC,MAAAA,OAJuB;AAKvBE,MAAAA,OAAO,EAAE,EAAE,GAAGA;AAAL;AALc,KAAzB;AAOAC,IAAAA,WAAW,CAACE,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBH,gBAAtB,CAAD,CAAX;AACD,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA,2BACE;AAAK,MAAA,EAAE,EAAEN,QAAT;AAAmB,MAAA,KAAK,EAAEG;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAzBD;;GAAML,M;;KAAAA,M;AA2BN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n/*\r\n  id : 그리드 ID\r\n  parentid : 그리드가 표출될 div의 ID\r\n  jsonref : 그리드에 바인딩 될 데이터\r\n  columns : 그리드 컬럼 타입 및 속성 설정\r\n  style : 그리드DIV에 적용 될 스타일\r\n  options : 그리드 속성 \r\n  setDatagrid : 그리드 변경 여부를 알기 state 관리 \r\n\r\n*/\r\nconst SBGrid = ({\r\n  id,\r\n  parentid,\r\n  jsonref,\r\n  columns,\r\n  style,\r\n  options,\r\n  setDatagrid,\r\n}) => {\r\n  useEffect(() => {\r\n    const SBGridProperties = {\r\n      id,\r\n      parentid,\r\n      jsonref,\r\n      columns,\r\n      options: { ...options },\r\n    };\r\n    setDatagrid(window._SBGrid.create(SBGridProperties));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div id={parentid} style={style}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SBGrid;\r\n"]},"metadata":{},"sourceType":"module"}