{"ast":null,"code":"var _jsxFileName = \"D:\\\\2021\\\\\\uD14C\\uC2A4\\uD2B8\\uC6A9\\\\test\\\\src\\\\features\\\\test\\\\test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SBGrid from \"./SBGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestGrid() {\n  _s();\n\n  const [datagrid, setDatagrid] = useState(null);\n  const [datagrid2, setDatagrid2] = useState(null);\n  const tempData1 = [{\n    \"col0\": \"데이터1\"\n  }];\n  const tempData2 = [{\n    \"col0\": \"데이터2\"\n  }];\n  useEffect(() => {\n    if (datagrid) {\n      console.log(datagrid);\n    }\n  }, [datagrid]);\n  useEffect(() => {\n    if (datagrid2) {\n      console.log(datagrid2);\n    }\n  }, [datagrid2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SBGrid, {\n      id: `datagrid`,\n      jsonref: tempData1,\n      columns: [{\n        caption: \"col0\",\n        ref: \"col0\",\n        style: \"text-align:center;\",\n        type: \"input\"\n      }],\n      options: {\n        rowheader: [\"seq\", \"update\"],\n        selectmode: \"free\"\n      },\n      parentid: `SBGridArea`,\n      style: {\n        height: \"350px\"\n      },\n      setDatagrid: setDatagrid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SBGrid, {\n      id: `datagrid2`,\n      jsonref: tempData2,\n      columns: [{\n        caption: \"col0\",\n        ref: \"col0\",\n        style: \"text-align:center;\",\n        type: \"input\"\n      }],\n      options: {\n        rowheader: [\"seq\", \"update\"],\n        selectmode: \"free\"\n      },\n      parentid: `SBGridArea2`,\n      style: {\n        height: \"350px\"\n      },\n      setDatagrid: setDatagrid2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TestGrid, \"gHarjmmh2CTx2vrsVeGES4FQLXU=\");\n\n_c = TestGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestGrid\");","map":{"version":3,"sources":["D:/2021/테스트용/test/src/features/test/test.js"],"names":["React","useEffect","useState","SBGrid","TestGrid","datagrid","setDatagrid","datagrid2","setDatagrid2","tempData1","tempData2","console","log","caption","ref","style","type","rowheader","selectmode","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,IAAD,CAAxC;AACF,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMO,SAAS,GAAG,CAAC;AAAC,YAAO;AAAR,GAAD,CAAlB;AACA,QAAMC,SAAS,GAAG,CAAC;AAAC,YAAO;AAAR,GAAD,CAAlB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,QAAJ,EAAc;AACZM,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACD;AACF,GAJQ,EAIN,CAACA,QAAD,CAJM,CAAT;AAMAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,SAAJ,EAAe;AACbI,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACD;AACF,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,EAAE,EAAG,UADP;AAEE,MAAA,OAAO,EAAEE,SAFX;AAGE,MAAA,OAAO,EAAE,CACP;AACEI,QAAAA,OAAO,EAAE,MADX;AAEEC,QAAAA,GAAG,EAAE,MAFP;AAGEC,QAAAA,KAAK,EAAE,oBAHT;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADO,CAHX;AAWE,MAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAE,CAAC,KAAD,EAAQ,QAAR,CADJ;AAEPC,QAAAA,UAAU,EAAE;AAFL,OAXX;AAeE,MAAA,QAAQ,EAAG,YAfb;AAgBE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAhBT;AAiBE,MAAA,WAAW,EAAEb;AAjBf;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,QAAC,MAAD;AACE,MAAA,EAAE,EAAG,WADP;AAEE,MAAA,OAAO,EAAEI,SAFX;AAGE,MAAA,OAAO,EAAE,CACP;AACEG,QAAAA,OAAO,EAAE,MADX;AAEEC,QAAAA,GAAG,EAAE,MAFP;AAGEC,QAAAA,KAAK,EAAE,oBAHT;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADO,CAHX;AAWE,MAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAE,CAAC,KAAD,EAAQ,QAAR,CADJ;AAEPC,QAAAA,UAAU,EAAE;AAFL,OAXX;AAeE,MAAA,QAAQ,EAAG,aAfb;AAgBE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAhBT;AAiBE,MAAA,WAAW,EAAEX;AAjBf;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GA3DuBJ,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SBGrid from \"./SBGrid\";\r\n\r\nexport default function TestGrid(){\r\n    const [datagrid, setDatagrid] = useState(null);\r\n  const [datagrid2, setDatagrid2] = useState(null);\r\n  const tempData1 = [{\"col0\":\"데이터1\"}];\r\n  const tempData2 = [{\"col0\":\"데이터2\"}];\r\n\r\n  useEffect(() => {\r\n    if (datagrid) {\r\n      console.log(datagrid);\r\n    }\r\n  }, [datagrid]);\r\n\r\n  useEffect(() => {\r\n    if (datagrid2) {\r\n      console.log(datagrid2);\r\n    }\r\n  }, [datagrid2]);\r\n  return (\r\n    <div className=\"App\">\r\n      <SBGrid\r\n        id={`datagrid`}\r\n        jsonref={tempData1}\r\n        columns={[\r\n          {\r\n            caption: \"col0\",\r\n            ref: \"col0\",\r\n            style: \"text-align:center;\",\r\n            type: \"input\",\r\n          },\r\n        ]}\r\n        options={{\r\n          rowheader: [\"seq\", \"update\"],\r\n          selectmode: \"free\",\r\n        }}\r\n        parentid={`SBGridArea`}\r\n        style={{ height: \"350px\" }}\r\n        setDatagrid={setDatagrid}\r\n      />\r\n      <SBGrid\r\n        id={`datagrid2`}\r\n        jsonref={tempData2}\r\n        columns={[\r\n          {\r\n            caption: \"col0\",\r\n            ref: \"col0\",\r\n            style: \"text-align:center;\",\r\n            type: \"input\",\r\n          },\r\n        ]}\r\n        options={{\r\n          rowheader: [\"seq\", \"update\"],\r\n          selectmode: \"free\",\r\n        }}\r\n        parentid={`SBGridArea2`}\r\n        style={{ height: \"350px\" }}\r\n        setDatagrid={setDatagrid2}\r\n      />\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}